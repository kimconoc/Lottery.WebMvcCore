@using Lottery.DoMain.Constant;
@using Lottery.DoMain.Models;
@using Newtonsoft.Json;
@using Lottery.DoMain.Enum;
@using Lottery.DoMain.Extentions;
@{
    var serializedModel1 = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Item1);
    var serializedModel2 = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Item2);
}
@model Tuple<List<CountByDay>, CountManyDayModel>
<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <link href="~/css/summaryManyDay.css" rel="stylesheet" />
    @*cssscript*@
    <link rel="stylesheet" href="~/assets/helpers/toastinette-notification-main/assets/css/toastinette.min.css">
    <script src="~/assets/helpers/toastinette-notification-main/assets/js/toastinette.js"></script>
    @*datetimepicker*@
    <link rel="stylesheet" type="text/css" href="~/assets/helpers/datetimepicker-master/jquery.datetimepicker.css" />
    <script src="~/assets/helpers/datetimepicker-master/jquery.datetimepicker.full.min.js"></script>
    <style>
        
    </style>
</head>
<body>
    <div style="" class="container-summaryManyDay">
        <div class="div-search-many-day">
            <div class="div-search-fromdate">
                <strong style="margin-top: 5px;">Từ:</strong>
                <input id="input_fromdate" type="text" class="box-input-date" readonly value="@Model.Item2.FromDate.ToString("dd/MM/yyyy")">
            </div>
            <div class="div-search-todate">
                <strong style="margin-top: 5px;">Đến:</strong>
                <input id="input_todate" type="text" class="box-input-date" readonly value="@Model.Item2.ToDate?.ToString("dd/MM/yyyy")">
            </div>
            <div class="div-btn-search">
                <button onclick="executeDataSummary()" id="search_data"></button>
            </div>
        </div>
        <div style="margin-top:25px;" id="div_summary_results">
        </div>
        <input id="fromdatetimepicker" style="display:none;" type="text">
        <input id="todatetimepicker" style="display:none;" type="text">
    </div>
    <script>
        var mode1 = @Html.Raw(serializedModel1);
        var mode2 = @Html.Raw(serializedModel2);
        var buttonSearch_data;
        jQuery.datetimepicker.setLocale('vi');
        jQuery('#fromdatetimepicker').datetimepicker({
            timepicker: false,
            value: '@Model.Item2.FromDate.ToString("yyyy/MM/dd HH:mm")'
        });
        jQuery('#todatetimepicker').datetimepicker({
            timepicker: false,
            value: '@Model.Item2.ToDate?.ToString("yyyy/MM/dd HH:mm")'
        });
        buttonSearch_data = new ej.buttons.Button({ isPrimary: true, content: "Tìm kiếm", disabled: false });
        buttonSearch_data.appendTo('#search_data');
        $(document).ready(function () {
            summaryJson = JSON.stringify(mode1);
            countManyDayJson = JSON.stringify(mode2);
            getPartialViewSummary(summaryJson, countManyDayJson);
        });
        $('#input_fromdate').on('click', function () {
            $('#fromdatetimepicker').datetimepicker('show');
        });
        $('#input_todate').on('click', function () {
            $('#todatetimepicker').datetimepicker('show');
        });
        $('#fromdatetimepicker').on('change', function () {
            buttonSearch_data.disabled = false;
            var dateString = $(this).val();
            let dateParts = dateString.split(' ')[0].split('/'); 
            let formattedDate = dateParts[2] + '/' + dateParts[1] + '/' + dateParts[0]; 
            document.getElementById("input_fromdate").value = formattedDate;
        });
        $('#todatetimepicker').on('change', function () {
            buttonSearch_data.disabled = false;
            var dateString = $(this).val();
            let dateParts = dateString.split(' ')[0].split('/');
            let formattedDate = dateParts[2] + '/' + dateParts[1] + '/' + dateParts[0];
            document.getElementById("input_todate").value = formattedDate;
        });
        function executeDataSummary() {
            buttonSearch_data.disabled = true;
            var strFromDate = document.getElementById("fromdatetimepicker").value;
            var strToDate = document.getElementById("todatetimepicker").value;
            ShowOverlay(true);
            $.ajax({
                type: "POST",
                data:
                {
                    "strFromDate": strFromDate,
                    "strToDate": strToDate,
                },
                url: "@Url.Action("CheckFromDateToDate", "SummaryResults")",
                success: function (data) {
                    hideOverlay();
                    if (data.success && data.data) {
                        searchDataSummary(strFromDate, strToDate)
                    }
                    else {
                        showToasinette_Error_Bottom_Center(data.message)
                    }
                },
            })
        }
        function searchDataSummary(strFromDate, strToDate) {
            window.location.href = `/SummaryResults/SummaryManyDay?strFromDate=${strFromDate}&strToDate=${strToDate}`;
        }
        function getPartialViewSummary(summaryJson, countManyDayJson) {
            var url = '@Url.Action("GetPartialViewSummary", "SummaryResults")';
            $('#div_summary_results').load(url, { summaryModelJson: summaryJson, countManyDayModelJson: countManyDayJson }, function (response, status, xhr) { });
        }
    </script>
</body>
</html>