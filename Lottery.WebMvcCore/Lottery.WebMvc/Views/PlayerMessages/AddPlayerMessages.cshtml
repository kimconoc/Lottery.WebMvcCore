@using Lottery.DoMain.Constant;
@using Newtonsoft.Json;
@using Lottery.DoMain.Enum;
@using Lottery.DoMain.Models;
@using Lottery.DoMain.Extentions;
@model MessgeByDaySession
@{
    Layout = null;
    var serializedModel = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
}

<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="~/css/addPlayerMessages.css" rel="stylesheet" />
    <script src="~/Scripts/jquery/jquery-3.3.1.js"></script>
    <script src="~/js/constant.js"></script>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <link href="~/css/site.css" rel="stylesheet" />
    @*master-plan*@
    <script src="~/assets/helpers/master-plan/adr_common.js"></script>
    <script src="~/assets/helpers/master-plan/iosOverlay.js"></script>
    <link href="~/assets//helpers/master-plan/style.css" rel="stylesheet" />
    @*cssscript*@
    <script src="~/assets/helpers/awesome-alert-main/awesomealert.js"></script>
    <link rel="stylesheet" href="~/assets/helpers/awesome-alert-main/style.css" />
    @*Syncfusion*@
    <link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-base/styles/material.css" rel="stylesheet">
    <link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-inputs/styles/material.css" rel="stylesheet">
    <link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-dropdowns/styles/material.css" rel="stylesheet">
    <link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-buttons/styles/material.css" rel="stylesheet">
    <script src="https://cdn.syncfusion.com/ej2/22.2.5/dist/ej2.min.js" type="text/javascript"></script>
    <script src="https://cdn.syncfusion.com/ej2/syncfusion-helper.js" type="text/javascript"></script>
    <style>
       
        .title-page {
            padding: 3px 10px 3px 5px;
            font-size: 16px;
        }

        .title-page-text {
            margin-top: 12px;
            cursor: pointer;
            display: inline-block;
        }

        .container-addPlayerMessages {
            padding: 40px 10px 0px 10px;
        }

        .div-list-btn-event{
            margin-top:20px;
            margin-bottom: 20px;
            display: grid;
            grid-template-columns: 1fr 2fr 1fr;
            gap:10px;
        }

            .div-list-btn-event button {
                font-size: 12px;
            }
    </style>
</head>
<body>
    <header class="header-page">
        <div class="title-page">
            <div onclick="goToAddBackPage()" class="title-page-text">
                <i class="fa fa-chevron-left" aria-hidden="true"></i>
                @{
                    string titlePageGoBack = string.Empty;
                    switch (Model.Region)
                    {
                        case (int)RegionEnum.MienNam:
                            titlePageGoBack = RegionEnum.MienNam.GetDescription();
                            break;
                        case (int)RegionEnum.MienTrung:
                            titlePageGoBack = RegionEnum.MienTrung.GetDescription();
                            break;
                        default:
                            titlePageGoBack = RegionEnum.MienBac.GetDescription();
                            break;
                    }
                    titlePageGoBack = string.Format(Model.NamePlayer + " - " + titlePageGoBack);
                    @titlePageGoBack;
                }
            </div>
        </div>
    </header>
    <div class="container-addPlayerMessages">
        <div class="div-list-btn-event">
            <button id="character_filtering"></button>
            <button onclick="characterFilteringSyntax()" id="syntax_check"></button>
            <button id="save_data"></button>
        </div>
        <div class="div-text-import-multiline">
            <textarea id="text_import_multiline" name="text"></textarea>
        </div>
    </div>

    <script>
        var model = @Html.Raw(serializedModel);
        var textareaObject;
        $(document).ready(function () {
            var button = new ej.buttons.Button({ isPrimary: true, content: "Lọc Ký Tự" });
            button.appendTo('#character_filtering');
            var button = new ej.buttons.Button({ isPrimary: true, content: "Kiểm Tra Cú Pháp" });
            button.appendTo('#syntax_check');
            var button = new ej.buttons.Button({ isPrimary: true, content: "Lưu Dữ Liệu", disabled: true });
            button.appendTo('#save_data');

            // Initialize TextBox component
            textareaObject = new ej.inputs.TextBox({
                placeholder: 'Nhập nội dung',
                floatLabelType: 'Auto',
                created: function () {
                    this.addAttributes({ rows: "2" });
                    this.element.style.height = "auto";
                    this.element.style.height = (this.element.scrollHeight - 7) + "px";
                },
                input: function () {
                    this.element.style.height = "auto";
                    this.element.style.height = (this.element.scrollHeight) + "px";
                },
                change: function (args) {
                    // Xử lý khi nội dung đã thay đổi ở đây
                },
                input: function (args) {
                    // Xử lý khi nội dung đang thay đổi ở đây
                    //alert(args.value);
                }
            });
            // Render initialized TextBox
            textareaObject.appendTo('#text_import_multiline');
        });
        function goToAddBackPage() {
            window.location.href = `/PlayerMessages/MessagesByDay?idPlayer=${model.IdPlayer}&namePlayer=${model.NamePlayer}&region=${model.Region}&cachTrungDaThang=${model.CachTrungDaThang}&cachTrungDaXien=${model.CachTrungDaXien}&dateTime=${model.HandlDate}`;
        }
        function characterFilteringSyntax(){
            var calculation3Model = {
                idMessage: null,
                idKhach: model.IdPlayer,
                mien: model.Region,
                handlByDate: model.HandlDate,
                cachTrungDaThang: model.CachTrungDaThang,
                cachTrungDaXien: model.CachTrungDaXien,
                isSave: false,
                synTax: textareaObject.value,
            }
            calculation3ModelJson = JSON.stringify(calculation3Model);
            ShowOverlay(true);
            $.ajax({
                type: "POST",
                data:
                {
                    "calculation3Json": calculation3ModelJson,
                },
                url: "@Url.Action("CharacterFilteringSyntax", "PlayerMessages")",
                success: function (data) {
                    hideOverlay();
                    if (data.success && data.data) {
                        
                    }
                    else {
                        
                    }
                },
            })
        }
    </script>
</body>
</html>