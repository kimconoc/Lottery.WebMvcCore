@using Lottery.DoMain.Constant;
@using Newtonsoft.Json;
@using Lottery.DoMain.Enum;
@using Lottery.DoMain.Models;
@using Lottery.DoMain.Extentions;
@model Tuple<MessgeByDaySession, List<DetailMessage>>;
@{
    Layout = null;
    var serializedModel1 = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Item1);
}

<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="~/css/listMessages.css" rel="stylesheet" />
    <script src="~/Scripts/jquery/jquery-3.3.1.js"></script>
    <script src="~/js/constant.js"></script>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <link href="~/css/site.css" rel="stylesheet" />
    @*master-plan*@
    <script src="~/assets/helpers/master-plan/adr_common.js"></script>
    <script src="~/assets/helpers/master-plan/iosOverlay.js"></script>
    <link href="~/assets//helpers/master-plan/style.css" rel="stylesheet" />
    @*cssscript*@
    <script src="~/assets/helpers/awesome-alert-main/awesomealert.js"></script>
    <link rel="stylesheet" href="~/assets/helpers/awesome-alert-main/style.css" />
    @*Syncfusion*@
    <link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-base/styles/material.css" rel="stylesheet">
    <link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-inputs/styles/material.css" rel="stylesheet">
    <link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-dropdowns/styles/material.css" rel="stylesheet">
    <link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-buttons/styles/material.css" rel="stylesheet">
    <script src="https://cdn.syncfusion.com/ej2/22.2.5/dist/ej2.min.js" type="text/javascript"></script>
    <script src="https://cdn.syncfusion.com/ej2/syncfusion-helper.js" type="text/javascript"></script>
    @*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.0/css/all.min.css">*@
    @*datetimepicker*@
    <link rel="stylesheet" type="text/css" href="~/assets/helpers/datetimepicker-master/jquery.datetimepicker.css" />
    <script src="~/assets/helpers/datetimepicker-master/jquery.datetimepicker.full.min.js"></script>
    <style>
        
    </style>
</head>
<body>
    <header class="header-page">
        <div class="title-page">
            <div onclick="goToAddBackPage()" class="title-page-text">
                <i class="fa fa-chevron-left" aria-hidden="true"></i>
                @{
                    string titlePageGoBack = string.Empty;
                    switch (Model.Item1.Region)
                    {
                        case (int)RegionEnum.MienNam:
                            titlePageGoBack = RegionEnum.MienNam.GetDescription();
                            break;
                        case (int)RegionEnum.MienTrung:
                            titlePageGoBack = RegionEnum.MienTrung.GetDescription();
                            break;
                        default:
                            titlePageGoBack = RegionEnum.MienBac.GetDescription();
                            break;
                    }
                    titlePageGoBack = string.Format(@Model.Item1.NamePlayer + " - " + titlePageGoBack);
                            @titlePageGoBack;
                }
            </div>

            <button class="somebutton title-page-btn">
                <i class="fa fa-calendar" aria-hidden="true"></i>
                <span>@Model.Item1.HandlDate?.ToString("dd/MM/yyyy")</span>
            </button>
        </div>
    </header>
    <div class="container-listMessages">
        @{
            if (Model.Item2 == null || Model.Item2.Count == 0)
            {
                <div class="box-no-data-found">
                    <img src="~/lottery/empty-order/empty-order.png">
                    <span>Không có tin nhắn</span>
                </div>
            }
            else
            {
                foreach (var item in Model.Item2)
                {
                    <div class="div-list-message">
                        <div class="avatar">
                            <i class="fa fa-comments-o"></i>
                        </div>
                        <div style="flex: 1;">
                            <div class="info-detail">
                                <strong style="font-size:16px;">
                                    <strong style="color:#e3165b">Xử lý:</strong>
                                    @string.Format(item.HandlDate.ToString("dd/MM/yyyy HH:mm"))
                                </strong>
                                <div class="mainContent-message">
                                    @item.Message
                                </div>
                            </div>
                            <i id="@item.ID" onclick="deleteMessage(this)" class="icon-danger-delete fa fa-trash" aria-hidden="true"></i>
                            <i class="icon-danger-copy fa fa-clone" aria-hidden="true"></i>
                            <i class="icon-danger-info fa fa-pencil-square-o" aria-hidden="true"></i>
                            <div style="margin-bottom:20px;" class="border-bottom-row"></div>
                        </div>
                    </div>
                }
            }
        }
        <input id="datetimepicker" style="display:none;" type="text">
    </div>

    <script>
        var model1 = @Html.Raw(serializedModel1);
        jQuery.datetimepicker.setLocale('vi');
        jQuery('#datetimepicker').datetimepicker({
            timepicker: false,
            value: '@Model.Item1.HandlDate?.ToString("yyyy/MM/dd HH:mm")'
        });
        function goToAddBackPage() {
            window.location.href = `/PlayerMessages/MessagesByDay?idPlayer=${model1.IdPlayer}&namePlayer=${model1.NamePlayer}&region=${model1.Region}&cachTrungDaThang=${model1.CachTrungDaThang}&cachTrungDaXien=${model1.CachTrungDaXien}&strDateTime=@Model.Item1.HandlDate?.ToString("yyyy/MM/dd HH:mm")`;
        }
        $('button.somebutton').on('click', function () {
            $('#datetimepicker').datetimepicker('show');
        });
        $('#datetimepicker').on('change', function () {
            var dateString = $(this).val();
            var messgeByDaySessionModel = {
                idPlayer: model1.IdPlayer,
                namePlayer: model1.NamePlayer,
                region: model1.Region,
                cachTrungDaThang: model1.CachTrungDaThang,
                cachTrungDaXien: model1.CachTrungDaXien,
                strHandlDate: dateString,
            }
            messgeByDaySessionModelJson = JSON.stringify(messgeByDaySessionModel);
            window.location.href = `/PlayerMessages/ListMessages?messgeByDaySessionModelJson=${messgeByDaySessionModelJson}`;
        });

        function deleteMessage(dom) {
            if (confirm("Bạn muốn xóa người chơi này?")) {
                executeConfirm(dom.id);
            }
        }
        function executeConfirm(messageId) {
            ShowOverlay(true);
            $.ajax({
                type: "POST",
                traditional: true,
                data:
                {
                    "messageId": messageId,
                },
                url: "@Url.Action("DELETEHandlMessage", "PlayerMessages")",
                success: function (data) {
                    hideOverlay();
                    if (data.success && data.data) {
                        awesomeAlert({
                            header: true,
                            type: 'success',
                            title: 'Thành công!',
                            message: 'Xóa tin nhắn thành công.',
                            //bgColor: '#2dd284',
                            img: '/assets/images/icon/success.svg',
                            buttonOK: 'Xong!',
                            closeStyle: 'circle'
                        }).then(res => window.location.reload())
                    }
                    else {
                        var message = "Đã có lỗi xảy ra."
                        if (!isNullOrEmpty(data.Message)) {
                            message = data.message;
                        }
                        awesomeAlert({
                            header: true,
                            type: 'error',
                            title: 'Có lỗi!',
                            message: message,
                            //bgColor: '#2dd284',
                            img: '/assets/images/icon/error.svg',
                            buttonOK: 'Oke!',
                            closeStyle: 'circle'
                        }).then(res => false)
                    }
                },
            })
        }
    </script>
</body>
</html>